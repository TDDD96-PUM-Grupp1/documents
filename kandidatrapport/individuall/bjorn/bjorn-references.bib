@misc{linux-google,
  author = {Linus Torvalds},
  title = {Git - Source code control the way it was meant to be!},
  year = {2007},
  note = {Google Tech Talk},
  url = {https://www.youtube.com/watch?v=4XpnKHJAok8},
  urldate = {2018-05-05}
}

@online{vcs-popularity,
  author = {RhodeCode},
  title = {Version Control Systems Popularity},
  year = {2016},
  url = {https://rhodecode.com/insights/version-control-systems-2016},
  urldate = {2018-05-05}
}

@online{pull-request,
  author = {Atlassian},
  title = {Making a Pull Request},
  year = {2018},
  url = {https://www.atlassian.com/git/tutorials/making-a-pull-request},
  urldate = {2018-05-05}
}

@book{mercurial-book,
    author = "Bryan O'Sullivan",
    title = "Mercurial: The Definitive Guide",
    publisher = "O'Reilly Media, Inc.",
    year = "2009"
}


@online{netbeans-contribute,
  author = {Netbeans},
  title = {Contributing to the NetBeans Code Base},
  year = {2018},
  url = {https://netbeans.org/community/contribute/code.html},
  urldate = {2018-05-07}
}

@online{facebook-mercurial,
  author = {Goode, D. and Rain},
  title = {Scaling Mercurial at Facebook},
  year = {2014},
  url = {https://code.facebook.com/posts/218678814984400/scaling-mercurial-at-facebook/},
  urldate = {2018-05-07}
}

@book{svn-book,
 author = {Pilato, C and Collins-Sussman, Ben and Fitzpatrick, Brian},
 title = {Version Control with Subversion},
 year = {2008},
 isbn = {0596510330, 9780596510336},
 edition = {2},
 publisher = {O'Reilly Media, Inc.},
} 

@online{apache-dev-svn,
  author = {The Apache Software Foundation},
  title = {Source Code Repositories},
  year = {2018},
  url = {http://www.apache.org/dev/version-control.html},
  urldate = {2018-05-07}
}

@online{agile101,
  author = {Agile Alliance},
  title = {Agile 101},
  year = {2018},
  url = {https://www.agilealliance.org/agile101/},
  urldate = {2018-05-27}
}

@online{central-vs-distributed,
  author = {Giancarlo Lionetti},
  title = {What is version control: centralized vs. DVCS},
  year = {2012},
  url = {https://www.atlassian.com/blog/software-teams/version-control-centralized-dvcs},
  urldate = {2018-05-27}
}

@online{daly-agile-git,
  author = {Laura Daly},
  title = {Git makes software development, well, easier},
  year = {2018},
  url = {https://www.atlassian.com/agile/software-development/git},
  urldate = {2018-05-27}
}

@online{radigan-feature-branch,
  author = {Dan Radigan},
  title = {Feature branching your way to greatness},
  year = {2018},
  url = {https://www.atlassian.com/agile/software-development/branching},
  urldate = {2018-05-27}
}

@online{atlassian-feature-branch,
  author = {Atlassian},
  title = {Git Feature Branch Workflow},
  year = {2018},
  url = {https://www.atlassian.com/git/tutorials/comparing-workflows/feature-branch-workflow},
  urldate = {2018-05-27}
}

@online{fowler-feature-branch,
  author = {Martin Fowler},
  title = {FeatureBranch},
  year = {2009},
  url = {https://martinfowler.com/bliki/FeatureBranch.html},
  urldate = {2018-05-27}
}

@INPROCEEDINGS{8094445,
author={S. McKee and N. Nelson and A. Sarma and D. Dig},
booktitle={2017 IEEE International Conference on Software Maintenance and Evolution (ICSME)},
title={Software Practitioner Perspectives on Merge Conflicts and Resolutions},
year={2017},
volume={},
number={},
pages={467-478},
keywords={configuration management;organisational aspects;software maintenance;commercial projects;conflict resolution;conflicting code;human-oriented tools;merge conflicts;open-source projects;software development;software practitioner perspectives;Complexity theory;Encoding;Face;Interviews;Organizations;Software;Tools;conflict resolution;merge conflicts;perspectives},
doi={10.1109/ICSME.2017.53},
ISSN={},
month={Sept},}

@INPROCEEDINGS{8094433,
author={T. Baum and K. Schneider and A. Bacchelli},
booktitle={2017 IEEE International Conference on Software Maintenance and Evolution (ICSME)},
title={On the Optimal Order of Reading Source Code Changes for Review},
year={2017},
volume={},
number={},
pages={329-340},
keywords={program diagnostics;public domain software;software quality;source code (software);alphabetical order;change parts;change-based code review;code review tool;middle-range theory;optimal grouping;optimal order;partial order relation;review efficiency;review orders;review tools;reviewer;source code change reading;Industries;Interviews;Navigation;Software;Software engineering;Tools;Change-based code review;Cognitive support review tools;Modern code review;Program comprehension;Pull-based development},
doi={10.1109/ICSME.2017.28},
ISSN={},
month={Sept},}
